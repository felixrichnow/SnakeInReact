{"ast":null,"code":"var _jsxFileName = \"/Users/felixrichnau/Documents/Snake/react-snake-starter-files/react-snake-START-HERE/src/App.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from './useInterval';\nimport { CANVAS_SIZE, SNAKE_START, APPLE_START, SCALE, SPEED, DIRECTIONS } from './constants';\n\nconst App = () => {\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameover] = useState(false);\n\n  const startGame = () => {};\n\n  const endGame = () => {};\n\n  const moveSnake = () => {};\n\n  const createApple = () => {};\n\n  const checkCollision = () => {};\n\n  const checkAppleCollision = () => {};\n\n  const gameLoop = () => {};\n\n  useEffect(() => {}, [snake, apple, gameOver]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      border: \"1px solid black\"\n    },\n    ref: canvasRef,\n    width: `${CANVAS_SIZE[0]}px`,\n    height: `${CANVAS_SIZE[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"GAME OVER!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, \"Start Game\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/felixrichnau/Documents/Snake/react-snake-starter-files/react-snake-START-HERE/src/App.js"],"names":["React","useState","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","App","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameover","startGame","endGame","moveSnake","createApple","checkCollision","checkAppleCollision","gameLoop","e","border"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SACIC,WADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,UANJ,QAOO,aAPP;;AAUA,MAAMC,GAAG,GAAG,MAAM;AACjB,QAAMC,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,WAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACM,WAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAD,CAA9B;AACA,QAAK,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAK,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAvC;;AAGG,QAAMsB,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM,CAErB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAIA1B,EAAAA,SAAS,CAAE,MAAM,CAEhB,CAFQ,EAEN,CAACU,KAAD,EAAOE,KAAP,EAAcM,QAAd,CAFM,CAAT;AAKA,sBACA;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,QAAQ,EAAC,GAA5B;AAAgC,IAAA,SAAS,EAAES,CAAC,IAAIL,SAAS,CAACK,CAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAhB;AACA,IAAA,GAAG,EAAEnB,SADL;AAEA,IAAA,KAAK,EAAG,GAAEP,WAAW,CAAC,CAAD,CAAI,IAFzB;AAGA,IAAA,MAAM,EAAG,GAAEA,WAAW,CAAC,CAAD,CAAI,IAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMFgB,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANV,eAOF;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPE,CADA;AAWH,CArDD;;AAsDA,eAAeZ,GAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport {useInterval} from './useInterval';\nimport {\n    CANVAS_SIZE,\n    SNAKE_START,\n    APPLE_START,\n    SCALE,\n    SPEED,\n    DIRECTIONS\n} from './constants';\n\n\nconst App = () => {\n const canvasRef = useRef(null);\n const [snake, setSnake] = useState(SNAKE_START);\n const [apple, setApple] = useState(APPLE_START);\n const [dir, setDir] = useState([0,-1]);\n const[speed, setSpeed] = useState(null);\n const[gameOver, setGameover] = useState(false);\n \n\n    const startGame = () => {\n\n    }\n\n    const endGame = () => {\n\n    }\n\n    const moveSnake = () => {\n\n    }\n\n    const createApple = () => {\n\n    }\n\n    const checkCollision = () => {\n\n    }\n\n    const checkAppleCollision = () => {\n\n    }\n\n    const gameLoop = () => {\n\n    }\n\n    useEffect( () => {\n\n    }, [snake,apple, gameOver]\n    )\n\n    return(\n    <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)}>\n        <canvas style={ { border: \"1px solid black\" } }\n        ref={canvasRef}\n        width={`${CANVAS_SIZE[0]}px`}\n        height={`${CANVAS_SIZE[1]}px`}\n        />\n {gameOver && <div>GAME OVER!</div>}\n  <button onClick={startGame}>Start Game</button>\n  </div>\n )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}